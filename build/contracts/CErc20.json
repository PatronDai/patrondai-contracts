{
  "fileName": "CErc20.sol",
  "contractName": "CErc20",
  "source": "pragma solidity ^0.5.12;\n\nimport \"./CToken.sol\";\n\n/**\n * @title Compound's CErc20 Contract\n * @notice CTokens which wrap an EIP-20 underlying\n * @author Compound\n */\ncontract CErc20 is CToken, CErc20Interface {\n    /**\n     * @notice Initialize the new money market\n     * @param underlying_ The address of the underlying asset\n     * @param comptroller_ The address of the Comptroller\n     * @param interestRateModel_ The address of the interest rate model\n     * @param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\n     * @param name_ ERC-20 name of this token\n     * @param symbol_ ERC-20 symbol of this token\n     * @param decimals_ ERC-20 decimal precision of this token\n     */\n    function initialize(address underlying_,\n                        ComptrollerInterface comptroller_,\n                        InterestRateModel interestRateModel_,\n                        uint initialExchangeRateMantissa_,\n                        string memory name_,\n                        string memory symbol_,\n                        uint8 decimals_) public {\n        // CToken initialize does the bulk of the work\n        super.initialize(comptroller_, interestRateModel_, initialExchangeRateMantissa_, name_, symbol_, decimals_);\n\n        // Set underlying and sanity check it\n        underlying = underlying_;\n        EIP20Interface(underlying).totalSupply();\n    }\n\n    /*** User Interface ***/\n\n    /**\n     * @notice Sender supplies assets into the market and receives cTokens in exchange\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\n     * @param mintAmount The amount of the underlying asset to supply\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function mint(uint mintAmount) external returns (uint) {\n        (uint err,) = mintInternal(mintAmount);\n        return err;\n    }\n\n    /**\n     * @notice Sender redeems cTokens in exchange for the underlying asset\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\n     * @param redeemTokens The number of cTokens to redeem into underlying\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function redeem(uint redeemTokens) external returns (uint) {\n        return redeemInternal(redeemTokens);\n    }\n\n    /**\n     * @notice Sender redeems cTokens in exchange for a specified amount of underlying asset\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\n     * @param redeemAmount The amount of underlying to redeem\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function redeemUnderlying(uint redeemAmount) external returns (uint) {\n        return redeemUnderlyingInternal(redeemAmount);\n    }\n\n    /**\n      * @notice Sender borrows assets from the protocol to their own address\n      * @param borrowAmount The amount of the underlying asset to borrow\n      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n      */\n    function borrow(uint borrowAmount) external returns (uint) {\n        return borrowInternal(borrowAmount);\n    }\n\n    /**\n     * @notice Sender repays their own borrow\n     * @param repayAmount The amount to repay\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function repayBorrow(uint repayAmount) external returns (uint) {\n        (uint err,) = repayBorrowInternal(repayAmount);\n        return err;\n    }\n\n    /**\n     * @notice Sender repays a borrow belonging to borrower\n     * @param borrower the account with the debt being payed off\n     * @param repayAmount The amount to repay\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function repayBorrowBehalf(address borrower, uint repayAmount) external returns (uint) {\n        (uint err,) = repayBorrowBehalfInternal(borrower, repayAmount);\n        return err;\n    }\n\n    /**\n     * @notice The sender liquidates the borrowers collateral.\n     *  The collateral seized is transferred to the liquidator.\n     * @param borrower The borrower of this cToken to be liquidated\n     * @param repayAmount The amount of the underlying borrowed asset to repay\n     * @param cTokenCollateral The market in which to seize collateral from the borrower\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function liquidateBorrow(address borrower, uint repayAmount, CTokenInterface cTokenCollateral) external returns (uint) {\n        (uint err,) = liquidateBorrowInternal(borrower, repayAmount, cTokenCollateral);\n        return err;\n    }\n\n    /**\n     * @notice The sender adds to reserves.\n     * @param addAmount The amount fo underlying token to add as reserves\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function _addReserves(uint addAmount) external returns (uint) {\n        return _addReservesInternal(addAmount);\n    }\n\n    /*** Safe Token ***/\n\n    /**\n     * @notice Gets balance of this contract in terms of the underlying\n     * @dev This excludes the value of the current message, if any\n     * @return The quantity of underlying tokens owned by this contract\n     */\n    function getCashPrior() internal view returns (uint) {\n        EIP20Interface token = EIP20Interface(underlying);\n        return token.balanceOf(address(this));\n    }\n\n    /**\n     * @dev Checks whether or not there is sufficient allowance for this contract to move amount from `from` and\n     *      whether or not `from` has a balance of at least `amount`. Does NOT do a transfer.\n     */\n    function checkTransferIn(address from, uint amount) internal view returns (Error) {\n        EIP20Interface token = EIP20Interface(underlying);\n\n        if (token.allowance(from, address(this)) < amount) {\n            return Error.TOKEN_INSUFFICIENT_ALLOWANCE;\n        }\n\n        if (token.balanceOf(from) < amount) {\n            return Error.TOKEN_INSUFFICIENT_BALANCE;\n        }\n\n        return Error.NO_ERROR;\n    }\n\n    /**\n     * @dev Similar to EIP20 transfer, except it handles a False result from `transferFrom` reverts in that case.\n     *      If caller has not called `checkTransferIn`, this may revert due to insufficient balance or insufficient\n     *      allowance. If caller has called `checkTransferIn` prior to this call, and it returned Error.NO_ERROR,\n     *      this should not revert in normal conditions. This function returns the actual amount received,\n     *      with may be less than `amount` if there is a fee attached with the transfer.\n     *\n     *      Note: This wrapper safely handles non-standard ERC-20 tokens that do not return a value.\n     *            See here: https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca\n     */\n    function doTransferIn(address from, uint amount) internal returns (uint) {\n        EIP20NonStandardInterface token = EIP20NonStandardInterface(underlying);\n        uint balanceBefore = EIP20Interface(underlying).balanceOf(address(this));\n        token.transferFrom(from, address(this), amount);\n\n        bool success;\n        assembly {\n            switch returndatasize()\n                case 0 {                       // This is a non-standard ERC-20\n                    success := not(0)          // set success to true\n                }\n                case 32 {                      // This is a compliant ERC-20\n                    returndatacopy(0, 0, 32)\n                    success := mload(0)        // Set `success = returndata` of external call\n                }\n                default {                      // This is an excessively non-compliant ERC-20, revert.\n                    revert(0, 0)\n                }\n        }\n        require(success, \"TOKEN_TRANSFER_IN_FAILED\");\n\n        // Calculate the amount that was *actually* transferred\n        uint balanceAfter = EIP20Interface(underlying).balanceOf(address(this));\n        require(balanceAfter >= balanceBefore, \"TOKEN_TRANSFER_IN_OVERFLOW\");\n        return balanceAfter - balanceBefore;   // underflow already checked above, just subtract\n    }\n\n    /**\n     * @dev Similar to EIP20 transfer, except it handles a False success from `transfer` and returns an explanatory\n     *      error code rather than reverting. If caller has not called checked protocol's balance, this may revert due to\n     *      insufficient cash held in this contract. If caller has checked protocol's balance prior to this call, and verified\n     *      it is >= amount, this should not revert in normal conditions.\n     *\n     *      Note: This wrapper safely handles non-standard ERC-20 tokens that do not return a value.\n     *            See here: https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca\n     */\n    function doTransferOut(address payable to, uint amount) internal {\n        EIP20NonStandardInterface token = EIP20NonStandardInterface(underlying);\n        token.transfer(to, amount);\n\n        bool success;\n        assembly {\n            switch returndatasize()\n                case 0 {                      // This is a non-standard ERC-20\n                    success := not(0)          // set success to true\n                }\n                case 32 {                     // This is a complaint ERC-20\n                    returndatacopy(0, 0, 32)\n                    success := mload(0)        // Set `success = returndata` of external call\n                }\n                default {                     // This is an excessively non-compliant ERC-20, revert.\n                    revert(0, 0)\n                }\n        }\n        require(success, \"TOKEN_TRANSFER_OUT_FAILED\");\n    }\n}\n",
  "sourcePath": "node_modules/compound-protocol/contracts/CErc20.sol",
  "sourceMap": "166:9661:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;166:9661:4;;;;;;;",
  "deployedSourceMap": "166:9661:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;166:9661:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;289:18:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;289:18:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6365:232:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6365:232:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3401:146:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3401:146:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1541:33:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10511:221:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10511:221:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2161:23:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13289:257:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;714:671:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;714:671:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;714:671:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;714:671:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;714:671:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;714:671:4;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;714:671:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;714:671:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;714:671:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;714:671:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5712:193:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5712:193:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3827:186:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3827:186:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;985:35:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;475:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7601:349:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7601:349:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15080:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4946:117:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4946:117:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;52800:718:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;52800:718:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1935:24:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1106:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;58523:563:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;58523:563:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1659:30:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7679:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7243:110:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7243:110:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10038:189;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2697:131:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2697:131:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2060:25:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;380:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;380:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10934:283:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10934:283:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;871:1498;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;871:1498:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;871:1498:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;871:1498:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;871:1498:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;871:1498:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;871:1498:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;871:1498:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;871:1498:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;871:1498:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1765:130:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1765:130:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15753:3395:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5231:183;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5231:183:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1805:23:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9716:182:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;47572:192;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;47572:192:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;50958:631;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;50958:631:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12851:195;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8288:685;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8288:685:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3089:111:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3089:111:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2238;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2238:111:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6919:141:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6919:141:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;51860:722;;;:::i;:::-;;;;;;;;;;;;;;;;;;;61422:627;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;61422:627:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1242:42:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4485:234:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4485:234:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;879:28:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9387:159:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;53814:599;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53814:599:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3155:36:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;289:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6365:232:5:-;6433:4;6449:11;6463:10;6449:24;;6518:6;6483:18;:23;6502:3;6483:23;;;;;;;;;;;;;;;:32;6507:7;6483:32;;;;;;;;;;;;;;;:41;;;;6553:7;6539:30;;6548:3;6539:30;;;6562:6;6539:30;;;;;;;;;;;;;;;;;;6586:4;6579:11;;;6365:232;;;;:::o;3401:146:4:-;3458:4;3475:8;3488:32;3508:11;3488:19;:32::i;:::-;3474:46;;;3537:3;3530:10;;;3401:146;;;:::o;1541:33:6:-;;;;:::o;10511:221:5:-;10589:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;10638:14;10633:20;;;;;;;;10613:16;:14;:16::i;:::-;:40;10605:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10697:28;10717:7;10697:19;:28::i;:::-;10690:35;;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;10511:221;;;:::o;2161:23:6:-;;;;:::o;13289:257:5:-;13340:4;13357:13;13372:11;13387:28;:26;:28::i;:::-;13356:59;;;;13440:18;13433:25;;;;;;;;:3;:25;;;;;;;;;13425:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13533:6;13526:13;;;;13289:257;:::o;714:671:4:-;1140:107;1157:12;1171:18;1191:28;1221:5;1228:7;1237:9;1140:16;:107::i;:::-;1317:11;1304:10;;:24;;;;;;;;;;;;;;;;;;1353:10;;;;;;;;;;;1338:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1338:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1338:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1338:40:4;;;;;;;;;;;;;;;;;714:671;;;;;;;:::o;5712:193:5:-;5807:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;5883:14;5878:20;;;;;;;;5830:44;5845:10;5857:3;5862;5867:6;5830:14;:44::i;:::-;:68;5823:75;;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;5712:193;;;;;:::o;3827:186:4:-;3908:4;3925:8;3938:48;3964:8;3974:11;3938:25;:48::i;:::-;3924:62;;;4003:3;3996:10;;;3827:186;;;;:::o;985:35:6:-;;;;;;;;;;;;;:::o;475:21::-;;;;;;;;;;;;;:::o;7601:349:5:-;7663:4;7679:23;;:::i;:::-;7705:38;;;;;;;;7720:21;:19;:21::i;:::-;7705:38;;;7679:64;;7754:14;7770:12;7786:53;7804:12;7818:13;:20;7832:5;7818:20;;;;;;;;;;;;;;;;7786:17;:53::i;:::-;7753:86;;;;7865:18;7857:26;;;;;;;;:4;:26;;;;;;;;;7849:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7936:7;7929:14;;;;;7601:349;;;:::o;15080:86::-;15122:4;15145:14;:12;:14::i;:::-;15138:21;;15080:86;:::o;4946:117:4:-;5002:4;5025:31;5046:9;5025:20;:31::i;:::-;5018:38;;4946:117;;;:::o;52800:718:5:-;52878:4;52945:5;;;;;;;;;;;52931:19;;:10;:19;;;52927:122;;52973:65;52978:18;52998:39;52973:4;:65::i;:::-;52966:72;;;;52927:122;53059:35;53097:11;;;;;;;;;;;53059:49;;53192:14;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53192:30:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;53192:30:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53192:30:5;;;;;;;;;;;;;;;;53184:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53334:14;53320:11;;:28;;;;;;;;;;;;;;;;;;53427:46;53442:14;53458;53427:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53496:14;53491:20;;;;;;;;53484:27;;;52800:718;;;;:::o;1935:24:6:-;;;;:::o;1106:39::-;;;;;;;;;;;;;:::o;58523:563:5:-;58598:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;58614:10;58627:16;:14;:16::i;:::-;58614:29;;58671:14;58666:20;;;;;;;;58657:5;:29;58653:274;;58846:70;58857:5;58851:12;;;;;;;;58865:50;58846:4;:70::i;:::-;58839:77;;;;;58653:274;59045:34;59066:12;59045:20;:34::i;:::-;59038:41;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;58523:563;;;:::o;1659:30:6:-;;;;:::o;7679:25::-;;;;;;;;;;;;;:::o;7243:110:5:-;7300:7;7326:13;:20;7340:5;7326:20;;;;;;;;;;;;;;;;7319:27;;7243:110;;;:::o;10038:189::-;10100:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;10149:14;10144:20;;;;;;;;10124:16;:14;:16::i;:::-;:40;10116:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10208:12;;10201:19;;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;10038:189;:::o;2697:131:4:-;2760:4;2783:38;2808:12;2783:24;:38::i;:::-;2776:45;;2697:131;;;:::o;2060:25:6:-;;;;:::o;380:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10934:283:5:-;11001:4;11018:13;11033:11;11048:36;11076:7;11048:27;:36::i;:::-;11017:67;;;;11109:18;11102:25;;;;;;;;:3;:25;;;;;;;;;11094:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11204:6;11197:13;;;;10934:283;;;:::o;871:1498::-;1219:5;;;;;;;;;;;1205:19;;:10;:19;;;1197:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1305:1;1283:18;;:23;:43;;;;;1325:1;1310:11;;:16;1283:43;1275:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1444:28;1414:27;:58;;;;1520:1;1490:27;;:31;1482:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1616:8;1627:29;1643:12;1627:15;:29::i;:::-;1616:40;;1686:14;1681:20;;;;;;;;1674:3;:27;1666:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1869:16;:14;:16::i;:::-;1848:18;:37;;;;447:4:12;1895:11:5;:25;;;;2017:46;2044:18;2017:26;:46::i;:::-;2011:52;;2093:14;2088:20;;;;;;;;2081:3;:27;2073:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2165:5;2158:4;:12;;;;;;;;;;;;:::i;:::-;;2189:7;2180:6;:16;;;;;;;;;;;;:::i;:::-;;2217:9;2206:8;;:20;;;;;;;;;;;;;;;;;;2358:4;2344:11;;:18;;;;;;;;;;;;;;;;;;871:1498;;;;;;;:::o;1765:130:4:-;1814:4;1831:8;1844:24;1857:10;1844:12;:24::i;:::-;1830:38;;;1885:3;1878:10;;;1765:130;;;:::o;15753:3395:5:-;15795:4;15811:35;;:::i;:::-;15856:14;15873;:12;:14::i;:::-;15856:31;;15981:17;;;;;;;;;;;:31;;;16013:9;16024:12;;16038:13;;15981:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15981:71:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15981:71:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15981:71:5;;;;;;;;;;;;;;;;15955:4;:23;;:97;;;;;644:9:6;16070:4:5;:23;;;:48;;16062:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16236:16;:14;:16::i;:::-;16210:4;:23;;:42;;;;;16373:52;16381:4;:23;;;16406:18;;16373:7;:52::i;:::-;16340:4;:12;;16354:4;:15;;16339:86;;;;;;;;;;;;;;;;;;;;;;;;;;16459:18;16443:34;;;;;;;;:4;:12;;;:34;;;;;;;;;16435:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17037:68;17047:40;;;;;;;;17062:4;:23;;;17047:40;;;17089:4;:15;;;17037:9;:68::i;:::-;16993:112;;;16994:4;:12;;17008:4;:25;;16993:112;;;;;;;;;;;;;;;;;;;;;;;;;17135:18;17119:34;;;;;;;;:4;:12;;;:34;;;;;;;;;17115:191;;17176:119;17187:16;17205:69;17281:4;:12;;;17276:18;;;;;;;;17176:10;:119::i;:::-;17169:126;;;;;;17115:191;17359:58;17377:4;:25;;;17404:12;;17359:17;:58::i;:::-;17317:4;:12;;17331:4;:24;;17316:101;;;;;;;;;;;;;;;;;;;;;;;;;;17447:18;17431:34;;;;;;;;:4;:12;;;:34;;;;;;;;;17427:189;;17488:117;17499:16;17517:67;17591:4;:12;;;17586:18;;;;;;;;17488:10;:117::i;:::-;17481:124;;;;;;17427:189;17665:47;17673:4;:24;;;17699:12;;17665:7;:47::i;:::-;17627:4;:12;;17641:4;:20;;17626:86;;;;;;;;;;;;;;;;;;;;;;;;;;17742:18;17726:34;;;;;;;;:4;:12;;;:34;;;;;;;;;17722:186;;17783:114;17794:16;17812:64;17883:4;:12;;;17878:18;;;;;;;;17783:10;:114::i;:::-;17776:121;;;;;;17722:186;17958:105;17983:38;;;;;;;;17998:21;;17983:38;;;18023:4;:24;;;18049:13;;17958:24;:105::i;:::-;17919:4;:12;;17933:4;:21;;17918:145;;;;;;;;;;;;;;;;;;;;;;;;;;18093:18;18077:34;;;;;;;;:4;:12;;;:34;;;;;;;;;18073:187;;18134:115;18145:16;18163:65;18235:4;:12;;;18230:18;;;;;;;;18134:10;:115::i;:::-;18127:122;;;;;;18073:187;18308:77;18333:4;:25;;;18360:11;;18373;;18308:24;:77::i;:::-;18271:4;:12;;18285:4;:19;;18270:115;;;;;;;;;;;;;;;;;;;;;;;;;;18415:18;18399:34;;;;;;;;:4;:12;;;:34;;;;;;;;;18395:185;;18456:113;18467:16;18485:63;18555:4;:12;;;18550:18;;;;;;;;18456:10;:113::i;:::-;18449:120;;;;;;18395:185;18797:4;:23;;;18776:18;:44;;;;18844:4;:19;;;18830:11;:33;;;;18888:4;:20;;;18873:12;:35;;;;18934:4;:21;;;18918:13;:37;;;;19017:86;19032:9;19043:4;:24;;;19069:4;:19;;;19090:12;;19017:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19126:14;19121:20;;;;;;;;19114:27;;;;15753:3395;;:::o;5231:183::-;5309:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;5392:14;5387:20;;;;;;;;5332:51;5347:10;5359;5371:3;5376:6;5332:14;:51::i;:::-;:75;5325:82;;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;5231:183;;;;:::o;1805:23:6:-;;;;:::o;9716:182:5:-;9769:4;9792:17;;;;;;;;;;;:31;;;9824:14;:12;:14::i;:::-;9840:12;;9854:13;;9869:21;;9792:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9792:99:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9792:99:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9792:99:5;;;;;;;;;;;;;;;;9785:106;;9716:182;:::o;47572:192::-;47674:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;47697:60;47711:10;47723;47735:8;47745:11;47697:13;:60::i;:::-;47690:67;;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;47572:192;;;;;:::o;50958:631::-;51035:4;51101:5;;;;;;;;;;;51087:19;;:10;:19;;;51083:124;;51129:67;51134:18;51154:41;51129:4;:67::i;:::-;51122:74;;;;51083:124;51277:23;51303:12;;;;;;;;;;;51277:38;;51398:15;51383:12;;:30;;;;;;;;;;;;;;;;;;51495:49;51511:15;51528;51495:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51567:14;51562:20;;;;;;;;51555:27;;;50958:631;;;;:::o;12851:195::-;12911:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;12960:14;12955:20;;;;;;;;12935:16;:14;:16::i;:::-;:40;12927:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13019:20;:18;:20::i;:::-;13012:27;;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;12851:195;:::o;8288:685::-;8356:4;8362;8368;8374;8390:18;8411:13;:22;8425:7;8411:22;;;;;;;;;;;;;;;;8390:43;;8443:18;8471:25;8507:14;8556:36;8584:7;8556:27;:36::i;:::-;8532:60;;;;;;;;8614:18;8606:26;;;;;;;;:4;:26;;;;;;;;;8602:97;;8661:16;8656:22;;;;;;;;8680:1;8683;8686;8648:40;;;;;;;;;;;;;;;;;;;;;;;8602:97;8740:28;:26;:28::i;:::-;8709:59;;;;;;;;8790:18;8782:26;;;;;;;;:4;:26;;;;;;;;;8778:97;;8837:16;8832:22;;;;;;;;8856:1;8859;8862;8824:40;;;;;;;;;;;;;;;;;;;;;;;8778:97;8898:14;8893:20;;;;;;;;8915:13;8930;8945:20;8885:81;;;;;;;;;;;;8288:685;;;;;;:::o;3089:111:4:-;3142:4;3165:28;3180:12;3165:14;:28::i;:::-;3158:35;;3089:111;;;:::o;2238:::-;2291:4;2314:28;2329:12;2314:14;:28::i;:::-;2307:35;;2238:111;;;:::o;6919:141:5:-;6993:7;7019:18;:25;7038:5;7019:25;;;;;;;;;;;;;;;:34;7045:7;7019:34;;;;;;;;;;;;;;;;7012:41;;6919:141;;;;:::o;51860:722::-;51902:4;52008:12;;;;;;;;;;;51994:26;;:10;:26;;;;:54;;;;52046:1;52024:24;;:10;:24;;;51994:54;51990:162;;;52071:70;52076:18;52096:44;52071:4;:70::i;:::-;52064:77;;;;51990:162;52214:16;52233:5;;;;;;;;;;;52214:24;;52248:23;52274:12;;;;;;;;;;;52248:38;;52352:12;;;;;;;;;;;52344:5;;:20;;;;;;;;;;;;;;;;;;52433:1;52410:12;;:25;;;;;;;;;;;;;;;;;;52451;52460:8;52470:5;;;;;;;;;;;52451:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52491:46;52507:15;52524:12;;;;;;;;;;;52491:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52560:14;52555:20;;;;;;;;52548:27;;;;51860:722;;:::o;61422:627::-;61509:4;61525:10;61538:16;:14;:16::i;:::-;61525:29;;61582:14;61577:20;;;;;;;;61568:5;:29;61564:297;;61772:78;61783:5;61777:12;;;;;;;;61791:58;61772:4;:78::i;:::-;61765:85;;;;;61564:297;61994:48;62021:20;61994:26;:48::i;:::-;61987:55;;;61422:627;;;;:::o;1242:42:6:-;;;;;;;;;;;;;:::o;4485:234:4:-;4598:4;4615:8;4628:64;4652:8;4662:11;4675:16;4628:23;:64::i;:::-;4614:78;;;4709:3;4702:10;;;4485:234;;;;;:::o;879:28:6:-;;;;;;;;;;;;;:::o;9387:159:5:-;9440:4;9463:17;;;;;;;;;;;:31;;;9495:14;:12;:14::i;:::-;9511:12;;9525:13;;9463:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9463:76:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9463:76:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9463:76:5;;;;;;;;;;;;;;;;9456:83;;9387:159;:::o;53814:599::-;53903:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;53919:10;53932:16;:14;:16::i;:::-;53919:29;;53976:14;53971:20;;;;;;;;53962:5;:29;53958:283;;54157:73;54168:5;54162:12;;;;;;;;54176:53;54157:4;:73::i;:::-;54150:80;;;;;53958:283;54358:48;54381:24;54358:22;:48::i;:::-;54351:55;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;53814:599;;;:::o;3155:36:6:-;3187:4;3155:36;:::o;35659:564:5:-;35737:4;35743;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;35759:10;35772:16;:14;:16::i;:::-;35759:29;;35816:14;35811:20;;;;;;;;35802:5;:29;35798:257;;35973:67;35984:5;35978:12;;;;;;;;35992:47;35973:4;:67::i;:::-;36042:1;35965:79;;;;;;;;;;35798:257;36163:53;36180:10;36192;36204:11;36163:16;:53::i;:::-;36156:60;;;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;35659:564;;;:::o;13803:1113::-;13864:9;13875:4;13910:1;13895:11;;:16;13891:1019;;;14063:18;14083:27;;14055:56;;;;;;13891:1019;14287:14;14304;:12;:14::i;:::-;14287:31;;14332:33;14379:23;;:::i;:::-;14416:17;14490:54;14505:9;14516:12;;14530:13;;14490:14;:54::i;:::-;14448:96;;;;;;;;14573:18;14562:29;;;;;;;;:7;:29;;;;;;;;;14558:87;;14619:7;14628:1;14611:19;;;;;;;;;;;;;14558:87;14685:49;14692:28;14722:11;;14685:6;:49::i;:::-;14659:75;;;;;;;;14763:18;14752:29;;;;;;;;:7;:29;;;;;;;;;14748:87;;14809:7;14818:1;14801:19;;;;;;;;;;;;;14748:87;14857:18;14877:12;:21;;;14849:50;;;;;;;;13803:1113;;;:::o;2821:2157::-;2919:4;2978:12;2993:11;;;;;;;;;;;:27;;;3029:4;3036:3;3041;3046:6;2993:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2993:60:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2993:60:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2993:60:5;;;;;;;;;;;;;;;;2978:75;;3078:1;3067:7;:12;3063:142;;3102:92;3113:27;3142:42;3186:7;3102:10;:92::i;:::-;3095:99;;;;;3063:142;3268:3;3261:10;;:3;:10;;;3257:103;;;3294:55;3299:15;3316:32;3294:4;:55::i;:::-;3287:62;;;;;3257:103;3434:22;3459:1;3434:26;;3485:3;3474:14;;:7;:14;;;3470:156;;;3529:2;3504:28;;3470:156;;;3583:18;:23;3602:3;3583:23;;;;;;;;;;;;;;;:32;3607:7;3583:32;;;;;;;;;;;;;;;;3563:52;;3470:156;3701:17;3728;3755;3782;3836:34;3844:17;3863:6;3836:7;:34::i;:::-;3810:60;;;;;;;;3895:18;3884:29;;;;;;;;:7;:29;;;;;;;;;3880:123;;3936:56;3941:16;3959:32;3936:4;:56::i;:::-;3929:63;;;;;;;;;;3880:123;4039:35;4047:13;:18;4061:3;4047:18;;;;;;;;;;;;;;;;4067:6;4039:7;:35::i;:::-;4013:61;;;;;;;;4099:18;4088:29;;;;;;;;:7;:29;;;;;;;;;4084:122;;4140:55;4145:16;4163:31;4140:4;:55::i;:::-;4133:62;;;;;;;;;;4084:122;4242:35;4250:13;:18;4264:3;4250:18;;;;;;;;;;;;;;;;4270:6;4242:7;:35::i;:::-;4216:61;;;;;;;;4302:18;4291:29;;;;;;;;:7;:29;;;;;;;;;4287:120;;4343:53;4348:16;4366:29;4343:4;:53::i;:::-;4336:60;;;;;;;;;;4287:120;4555:12;4534:13;:18;4548:3;4534:18;;;;;;;;;;;;;;;:33;;;;4598:12;4577:13;:18;4591:3;4577:18;;;;;;;;;;;;;;;:33;;;;4706:2;4680:17;:29;4676:107;;4760:12;4725:18;:23;4744:3;4725:23;;;;;;;;;;;;;;;:32;4749:7;4725:32;;;;;;;;;;;;;;;:47;;;;4676:107;4851:3;4837:26;;4846:3;4837:26;;;4856:6;4837:26;;;;;;;;;;;;;;;;;;4874:11;;;;;;;;;;;:26;;;4909:4;4916:3;4921;4926:6;4874:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4874:59:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4874:59:5;;;;4956:14;4951:20;;;;;;;;4944:27;;;;;;;;2821:2157;;;;;;;:::o;36548:586::-;36650:4;36656;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;36672:10;36685:16;:14;:16::i;:::-;36672:29;;36729:14;36724:20;;;;;;;;36715:5;:29;36711:257;;36886:67;36897:5;36891:12;;;;;;;;36905:47;36886:4;:67::i;:::-;36955:1;36878:79;;;;;;;;;;36711:257;37076:51;37093:10;37105:8;37115:11;37076:16;:51::i;:::-;37069:58;;;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;36548:586;;;;;:::o;2448:306:12:-;2525:9;2536:4;2553:13;2568:18;;:::i;:::-;2590:20;2600:1;2603:6;2590:9;:20::i;:::-;2552:58;;;;2631:18;2624:25;;;;;;;;:3;:25;;;;;;;;;2620:71;;2673:3;2678:1;2665:15;;;;;;;;;;;2620:71;2709:18;2729:17;2738:7;2729:8;:17::i;:::-;2701:46;;;;;;2448:306;;;;;;:::o;5322:166:4:-;5369:4;5385:20;5423:10;;;;;;;;;;;5385:49;;5451:5;:15;;;5475:4;5451:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5451:30:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5451:30:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5451:30:4;;;;;;;;;;;;;;;;5444:37;;;5322:166;:::o;55874:580:5:-;55951:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;55967:10;55980:16;:14;:16::i;:::-;55967:29;;56024:14;56019:20;;;;;;;;56010:5;:29;56006:271;;56199:67;56210:5;56204:12;;;;;;;;56218:47;56199:4;:67::i;:::-;56192:74;;;;;56006:271;56397:28;56415:9;56397:17;:28::i;:::-;56385:40;;;;;56442:5;56435:12;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;55874:580;;;:::o;7233:149:11:-;7294:4;7315:33;7328:3;7323:9;;;;;;;;7339:4;7334:10;;;;;;;;7346:1;7315:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7371:3;7366:9;;;;;;;;7359:16;;7233:149;;;;:::o;59355:1706:5:-;59422:4;59478:21;59561:5;;;;;;;;;;;59547:19;;:10;:19;;;59543:122;;59589:65;59594:18;59614:39;59589:4;:65::i;:::-;59582:72;;;;;59543:122;59788:16;:14;:16::i;:::-;59766:18;;:38;59762:145;;59827:69;59832:22;59856:39;59827:4;:69::i;:::-;59820:76;;;;;59762:145;60010:12;59993:14;:12;:14::i;:::-;:29;59989:150;;;60045:83;60050:29;60081:46;60045:4;:83::i;:::-;60038:90;;;;;59989:150;60230:13;;60215:12;:28;60211:127;;;60266:61;60271:15;60288:38;60266:4;:61::i;:::-;60259:68;;;;;60211:127;60500:12;60484:13;;:28;60465:47;;60638:13;;60618:16;:33;;60610:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;60779:16;60763:13;:32;;;;60912:34;60926:5;;;;;;;;;;;60933:12;60912:13;:34::i;:::-;60962:54;60978:5;;;;;;;;;;;60985:12;60999:16;60962:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;61039:14;61034:20;;;;;;;;61027:27;;;59355:1706;;;;:::o;25350:529::-;25434:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;25450:10;25463:16;:14;:16::i;:::-;25450:29;;25507:14;25502:20;;;;;;;;25493:5;:29;25489:246;;25663:61;25674:5;25668:12;;;;;;;;25682:41;25663:4;:61::i;:::-;25656:68;;;;;25489:246;25832:40;25844:10;25856:1;25859:12;25832:11;:40::i;:::-;25825:47;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;25350:529;;;:::o;11464:1238::-;11541:9;11552:4;11635:17;11662:24;11696:11;11766:37;11806:14;:23;11821:7;11806:23;;;;;;;;;;;;;;;11766:63;;12058:1;12030:14;:24;;;:29;12026:90;;;12083:18;12103:1;12075:30;;;;;;;;;;;;;12026:90;12338:46;12346:14;:24;;;12372:11;;12338:7;:46::i;:::-;12305:79;;;;;;;;12409:18;12398:29;;;;;;;;:7;:29;;;;;;;;;12394:79;;12451:7;12460:1;12443:19;;;;;;;;;;;;;12394:79;12503:58;12511:19;12532:14;:28;;;12503:7;:58::i;:::-;12483:78;;;;;;;;12586:18;12575:29;;;;;;;;:7;:29;;;;;;;;;12571:79;;12628:7;12637:1;12620:19;;;;;;;;;;;;;12571:79;12668:18;12688:6;12660:35;;;;;;;;11464:1238;;;;:::o;9126:91::-;9175:4;9198:12;9191:19;;9126:91;:::o;62371:1271::-;62465:4;62565:38;62665:5;;;;;;;;;;;62651:19;;:10;:19;;;62647:130;;62693:73;62698:18;62718:47;62693:4;:73::i;:::-;62686:80;;;;;62647:130;62900:16;:14;:16::i;:::-;62878:18;;:38;62874:153;;62939:77;62944:22;62968:47;62939:4;:77::i;:::-;62932:84;;;;;62874:153;63118:17;;;;;;;;;;;63095:40;;63235:20;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;63235:42:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;63235:42:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;63235:42:5;;;;;;;;;;;;;;;;63227:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;63404:20;63384:17;;:40;;;;;;;;;;;;;;;;;;63527:70;63554:20;63576;63527:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;63620:14;63615:20;;;;;;;;63608:27;;;62371:1271;;;;:::o;19538:539::-;19608:4;19614;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;19630:10;19643:16;:14;:16::i;:::-;19630:29;;19687:14;19682:20;;;;;;;;19673:5;:29;19669:249;;19844:59;19855:5;19849:12;;;;;;;;19863:39;19844:4;:59::i;:::-;19905:1;19836:71;;;;;;;;;;19669:249;20037:33;20047:10;20059;20037:9;:33::i;:::-;20030:40;;;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;19538:539;;;:::o;1303:230:7:-;1359:9;1370:4;1395:1;1390;:6;1386:141;;1420:18;1444:1;1440;:5;1412:34;;;;;;1386:141;1485:27;1514:1;1477:39;;;;;;;1303:230;;;;;;:::o;1994:346:12:-;2063:9;2074:10;;:::i;:::-;2097:14;2113:19;2136:27;2144:1;:10;;;2156:6;2136:7;:27::i;:::-;2096:67;;;;2185:18;2177:26;;;;;;;;:4;:26;;;;;;;;;2173:90;;2227:4;2233:18;;;;;;;;2248:1;2233:18;;;2219:33;;;;;;;;;;;2173:90;2281:18;2301:31;;;;;;;;2316:14;2301:31;;;2273:60;;;;;;;;;1994:346;;;;;;:::o;7500:183:11:-;7585:4;7606:43;7619:3;7614:9;;;;;;;;7630:4;7625:10;;;;;;;;7637:11;7606:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7672:3;7667:9;;;;;;;;7660:16;;7500:183;;;;;:::o;1613:250:7:-;1669:9;1680:4;1696:6;1709:1;1705;:5;1696:14;;1730:1;1725;:6;1721:136;;1755:18;1775:1;1747:30;;;;;;;1721:136;1816:26;1844:1;1808:38;;;;;;;;1613:250;;;;;;:::o;2894:321:12:-;2991:9;3002:4;3019:13;3034:18;;:::i;:::-;3056:20;3066:1;3069:6;3056:9;:20::i;:::-;3018:58;;;;3097:18;3090:25;;;;;;;;:3;:25;;;;;;;;;3086:71;;3139:3;3144:1;3131:15;;;;;;;;;;;3086:71;3174:34;3182:17;3191:7;3182:8;:17::i;:::-;3201:6;3174:7;:34::i;:::-;3167:41;;;;;;2894:321;;;;;;;:::o;48427:2093:5:-;48545:4;48601:12;48616:11;;;;;;;;;;;:24;;;48649:4;48656:11;48669:10;48681:8;48691:11;48616:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48616:87:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48616:87:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48616:87:5;;;;;;;;;;;;;;;;48601:102;;48728:1;48717:7;:12;48713:149;;48752:99;48763:27;48792:49;48843:7;48752:10;:99::i;:::-;48745:106;;;;;48713:149;48932:10;48920:22;;:8;:22;;;48916:144;;;48965:84;48970:26;48998:50;48965:4;:84::i;:::-;48958:91;;;;;48916:144;49070:17;49097:22;49129:24;49465:45;49473:13;:23;49487:8;49473:23;;;;;;;;;;;;;;;;49498:11;49465:7;:45::i;:::-;49434:76;;;;;;;;49535:18;49524:29;;;;;;;;:7;:29;;;;;;;;;49520:164;;49576:97;49587:16;49605:52;49664:7;49659:13;;;;;;;;49576:10;:97::i;:::-;49569:104;;;;;;;;49520:164;49727:47;49735:13;:25;49749:10;49735:25;;;;;;;;;;;;;;;;49762:11;49727:7;:47::i;:::-;49694:80;;;;;;;;49799:18;49788:29;;;;;;;;:7;:29;;;;;;;;;49784:164;;49840:97;49851:16;49869:52;49928:7;49923:13;;;;;;;;49840:10;:97::i;:::-;49833:104;;;;;;;;49784:164;50170:17;50144:13;:23;50158:8;50144:23;;;;;;;;;;;;;;;:43;;;;50225:19;50197:13;:25;50211:10;50197:25;;;;;;;;;;;;;;;:47;;;;50315:10;50296:43;;50305:8;50296:43;;;50327:11;50296:43;;;;;;;;;;;;;;;;;;50389:11;;;;;;;;;;;:23;;;50421:4;50428:11;50441:10;50453:8;50463:11;50389:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50389:86:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;50389:86:5;;;;50498:14;50493:20;;;;;;;;50486:27;;;;;;48427:2093;;;;;;;:::o;31513:516::-;31587:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;31603:10;31616:16;:14;:16::i;:::-;31603:29;;31660:14;31655:20;;;;;;;;31646:5;:29;31642:246;;31816:61;31827:5;31821:12;;;;;;;;31835:41;31816:4;:61::i;:::-;31809:68;;;;;31642:246;31985:37;31997:10;32009:12;31985:11;:37::i;:::-;31978:44;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;31513:516;;;:::o;24459:519::-;24533:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;24549:10;24562:16;:14;:16::i;:::-;24549:29;;24606:14;24601:20;;;;;;;;24592:5;:29;24588:246;;24762:61;24773:5;24767:12;;;;;;;;24781:41;24762:4;:61::i;:::-;24755:68;;;;;24588:246;24931:40;24943:10;24955:12;24969:1;24931:11;:40::i;:::-;24924:47;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;24459:519;;;:::o;41928:979::-;42062:4;42068;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;42084:10;42097:16;:14;:16::i;:::-;42084:29;;42141:14;42136:20;;;;;;;;42127:5;:29;42123:266;;42303:71;42314:5;42308:12;;;;;;;;42322:51;42303:4;:71::i;:::-;42376:1;42295:83;;;;;;;;;;42123:266;42407:16;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;42407:33:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;42407:33:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;42407:33:5;;;;;;;;;;;;;;;;42399:41;;42468:14;42463:20;;;;;;;;42454:5;:29;42450:270;;42630:75;42641:5;42635:12;;;;;;;;42649:55;42630:4;:75::i;:::-;42707:1;42622:87;;;;;;;;;;42450:270;42827:73;42848:10;42860:8;42870:11;42883:16;42827:20;:73::i;:::-;42820:80;;;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;41928:979;;;;;;:::o;54674:951::-;54755:4;54822:5;;;;;;;;;;;54808:19;;:10;:19;;;54804:125;;54850:68;54855:18;54875:42;54850:4;:68::i;:::-;54843:75;;;;54804:125;55033:16;:14;:16::i;:::-;55011:18;;:38;55007:148;;55072:72;55077:22;55101:42;55072:4;:72::i;:::-;55065:79;;;;55007:148;805:4:6;55224:24:5;:51;55220:155;;;55298:66;55303:15;55320:43;55298:4;:66::i;:::-;55291:73;;;;55220:155;55385:29;55417:21;;55385:53;;55472:24;55448:21;:48;;;;55512:68;55529:24;55555;55512:68;;;;;;;;;;;;;;;;;;;;;;;;55603:14;55598:20;;;;;;;;55591:27;;;54674:951;;;;:::o;37819:3592::-;37914:4;37920;37982:12;37997:11;;;;;;;;;;;:30;;;38036:4;38043:5;38050:8;38060:11;37997:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37997:75:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37997:75:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37997:75:5;;;;;;;;;;;;;;;;37982:90;;38097:1;38086:7;:12;38082:151;;38122:96;38133:27;38162:46;38210:7;38122:10;:96::i;:::-;38220:1;38114:108;;;;;;;;;;38082:151;38340:16;:14;:16::i;:::-;38318:18;;:38;38314:151;;38380:70;38385:22;38409:40;38380:4;:70::i;:::-;38452:1;38372:82;;;;;;;;;;38314:151;38475:32;;:::i;:::-;38618:14;:24;38633:8;38618:24;;;;;;;;;;;;;;;:38;;;38597:4;:18;;:59;;;;;38784:37;38812:8;38784:27;:37::i;:::-;38747:4;:12;;38761:4;:19;;38746:75;;;;;;;;;;;;;;;;;;;;;;;;;;38851:18;38835:34;;;;;;;;:4;:12;;;:34;;;;;;;;;38831:190;;38893:113;38904:16;38922:63;38992:4;:12;;;38987:18;;;;;;;;38893:10;:113::i;:::-;39008:1;38885:125;;;;;;;;;;;38831:190;39120:2;39100:11;:23;39096:153;;;39158:4;:19;;;39139:4;:16;;:38;;;;;39096:153;;;39227:11;39208:4;:16;;:30;;;;;39096:153;39314:40;39330:5;39337:4;:16;;;39314:15;:40::i;:::-;39303:4;:8;;:51;;;;;;;;;;;;;;;;;;;;;;;39380:14;39368:26;;;;;;;;:4;:8;;;:26;;;;;;;;;39364:134;;39418:65;39423:4;:8;;;39433:49;39418:4;:65::i;:::-;39485:1;39410:77;;;;;;;;;;;39364:134;40083:37;40096:5;40103:4;:16;;;40083:12;:37::i;:::-;40058:4;:22;;:62;;;;;40415:52;40423:4;:19;;;40444:4;:22;;;40415:7;:52::i;:::-;40375:4;:12;;40389:4;:22;;40374:93;;;;;;;;;;;;;;;;;;;;;;;;;;40501:18;40485:34;;;;;;;;:4;:12;;;:34;;;;;;;;;40477:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40632:45;40640:12;;40654:4;:22;;;40632:7;:45::i;:::-;40594:4;:12;;40608:4;:20;;40593:84;;;;;;;;;;;;;;;;;;;;;;;;;;40711:18;40695:34;;;;;;;;:4;:12;;;:34;;;;;;;;;40687:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40900:4;:22;;;40863:14;:24;40878:8;40863:24;;;;;;;;;;;;;;;:34;;:59;;;;40973:11;;40932:14;:24;40947:8;40932:24;;;;;;;;;;;;;;;:38;;:52;;;;41009:4;:20;;;40994:12;:35;;;;41087:98;41099:5;41106:8;41116:4;:22;;;41140:4;:22;;;41164:4;:20;;;41087:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41235:11;;;;;;;;;;;:29;;;41273:4;41280:5;41287:8;41297:4;:22;;;41321:4;:18;;;41235:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;41235:105:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;41235:105:5;;;;41364:14;41359:20;;;;;;;;41381:4;:22;;;41351:53;;;;;;37819:3592;;;;;;;:::o;1927:263:7:-;1998:9;2009:4;2026:14;2042:8;2054:13;2062:1;2065;2054:7;:13::i;:::-;2025:42;;;;2090:18;2082:26;;;;;;;;:4;:26;;;;;;;;;2078:73;;2132:4;2138:1;2124:16;;;;;;;;;;;2078:73;2168:15;2176:3;2181:1;2168:7;:15::i;:::-;2161:22;;;;;;1927:263;;;;;;;:::o;788:503:12:-;849:9;860:10;;:::i;:::-;883:14;899:20;923:22;931:3;447:4;923:7;:22::i;:::-;882:63;;;;967:18;959:26;;;;;;;;:4;:26;;;;;;;;;955:90;;1009:4;1015:18;;;;;;;;1030:1;1015:18;;;1001:33;;;;;;;;;;;955:90;1056:14;1072:13;1089:31;1097:15;1114:5;1089:7;:31::i;:::-;1055:65;;;;1142:18;1134:26;;;;;;;;:4;:26;;;;;;;;;1130:90;;1184:4;1190:18;;;;;;;;1205:1;1190:18;;;1176:33;;;;;;;;;;;;;1130:90;1238:18;1258:25;;;;;;;;1273:8;1258:25;;;1230:54;;;;;;;;;;;788:503;;;;;;:::o;7140:210::-;7197:4;447;7320:3;:12;;;:23;;;;;;7313:30;;7140:210;;;:::o;56786:1490:5:-;56847:4;56853;56912:21;56943:20;57087:16;:14;:16::i;:::-;57065:18;;:38;57061:161;;57127:66;57132:22;57156:36;57127:4;:66::i;:::-;57195:15;57119:92;;;;;;;;57061:161;57276:9;57288:38;57304:10;57316:9;57288:15;:38::i;:::-;57276:50;;57347:14;57340:21;;;;;;;;:3;:21;;;;;;;;;57336:138;;57385:60;57390:3;57395:49;57385:4;:60::i;:::-;57447:15;57377:86;;;;;;;;;57336:138;57693:35;57706:10;57718:9;57693:12;:35::i;:::-;57675:53;;57774:15;57758:13;;:31;57739:50;;57861:13;;57841:16;:33;;57833:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58001:16;57985:13;:32;;;;58103:60;58117:10;58129:15;58146:16;58103:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58236:14;58231:20;;;;;;;;58253:15;58223:46;;;;;;;56786:1490;;;;:::o;8940:885:4:-;9015:31;9075:10;;;;;;;;;;;9015:71;;9096:5;:14;;;9111:2;9115:6;9096:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9096:26:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9096:26:4;;;;9133:12;9185:16;9223:1;9218:150;;;;9390:2;9385:216;;;;9734:1;9731;9724:12;9218:150;9316:1;9312:6;9301:17;;9218:150;;9385:216;9486:2;9483:1;9480;9465:24;9527:1;9521:8;9510:19;;9178:576;;9781:7;9773:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8940:885;;;;:::o;26748:4504:5:-;26855:4;26897:1;26879:14;:19;:42;;;;26920:1;26902:14;:19;26879:42;26871:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26989:27;;:::i;:::-;27130:28;:26;:28::i;:::-;27087:4;:12;;27101:4;:25;;27086:72;;;;;;;;;;;;;;;;;;;;;;;;;;27188:18;27172:34;;;;;;;;:4;:12;;;:34;;;;;;;;;27168:166;;27229:94;27240:16;27258:44;27309:4;:12;;;27304:18;;;;;;;;27229:10;:94::i;:::-;27222:101;;;;;27168:166;27402:1;27385:14;:18;27381:1265;;;27675:14;27655:4;:17;;:34;;;;;27740:77;27758:42;;;;;;;;27773:4;:25;;;27758:42;;;27802:14;27740:17;:77::i;:::-;27705:4;:12;;27719:4;:17;;27704:113;;;;;;;;;;;;;;;;;;;;;;;;;;27851:18;27835:34;;;;;;;;:4;:12;;;:34;;;;;;;;;27831:183;;27896:103;27907:16;27925:53;27985:4;:12;;;27980:18;;;;;;;;27896:10;:103::i;:::-;27889:110;;;;;27831:183;27381:1265;;;28308:82;28331:14;28347:42;;;;;;;;28362:4;:25;;;28347:42;;;28308:22;:82::i;:::-;28273:4;:12;;28287:4;:17;;28272:118;;;;;;;;;;;;;;;;;;;;;;;;;;28424:18;28408:34;;;;;;;;:4;:12;;;:34;;;;;;;;;28404:183;;28469:103;28480:16;28498:53;28558:4;:12;;;28553:18;;;;;;;;28469:10;:103::i;:::-;28462:110;;;;;28404:183;28621:14;28601:4;:17;;:34;;;;;27381:1265;28697:12;28712:11;;;;;;;;;;;:25;;;28746:4;28753:8;28763:4;:17;;;28712:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28712:69:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28712:69:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;28712:69:5;;;;;;;;;;;;;;;;28697:84;;28806:1;28795:7;:12;28791:140;;28830:90;28841:27;28870:40;28912:7;28830:10;:90::i;:::-;28823:97;;;;;;28791:140;29038:16;:14;:16::i;:::-;29016:18;;:38;29012:140;;29077:64;29082:22;29106:34;29077:4;:64::i;:::-;29070:71;;;;;;29012:140;29440:39;29448:11;;29461:4;:17;;;29440:7;:39::i;:::-;29403:4;:12;;29417:4;:19;;29402:77;;;;;;;;;;;;;;;;;;;;;;;;;;29509:18;29493:34;;;;;;;;:4;:12;;;:34;;;;;;;;;29489:176;;29550:104;29561:16;29579:54;29640:4;:12;;;29635:18;;;;;;;;29550:10;:104::i;:::-;29543:111;;;;;;29489:176;29715:51;29723:13;:23;29737:8;29723:23;;;;;;;;;;;;;;;;29748:4;:17;;;29715:7;:51::i;:::-;29676:4;:12;;29690:4;:21;;29675:91;;;;;;;;;;;;;;;;;;;;;;;;;;29796:18;29780:34;;;;;;;;:4;:12;;;:34;;;;;;;;;29776:179;;29837:107;29848:16;29866:57;29930:4;:12;;;29925:18;;;;;;;;29837:10;:107::i;:::-;29830:114;;;;;;29776:179;30050:4;:17;;;30033:14;:12;:14::i;:::-;:34;30029:153;;;30090:81;30095:29;30126:44;30090:4;:81::i;:::-;30083:88;;;;;;30029:153;30666:42;30680:8;30690:4;:17;;;30666:13;:42::i;:::-;30798:4;:19;;;30784:11;:33;;;;30853:4;:21;;;30827:13;:23;30841:8;30827:23;;;;;;;;;;;;;;;:47;;;;30976:4;30949:52;;30958:8;30949:52;;;30983:4;:17;;;30949:52;;;;;;;;;;;;;;;;;;31016:54;31023:8;31033:4;:17;;;31052:4;:17;;;31016:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31120:11;;;;;;;;;;;:24;;;31153:4;31160:8;31170:4;:17;;;31189:4;:17;;;31120:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31120:87:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31120:87:5;;;;31230:14;31225:20;;;;;;;;31218:27;;;;26748:4504;;;;;;:::o;543:331:7:-;599:9;610:4;635:1;630;:6;626:67;;;660:18;680:1;652:30;;;;;;;;;626:67;703:6;716:1;712;:5;703:14;;741:1;736;732;:5;;;;;;:10;728:140;;766:26;794:1;758:38;;;;;;;;;;728:140;835:18;855:1;827:30;;;;;543:331;;;;;;:::o;964:209::-;1020:9;1031:4;1056:1;1051;:6;1047:75;;;1081:26;1109:1;1073:38;;;;;;;;;1047:75;1140:18;1164:1;1160;:5;;;;;;1132:34;;;;964:209;;;;;;:::o;20768:3348:5:-;20838:4;20844;20899:12;20914:11;;;;;;;;;;;:23;;;20946:4;20953:6;20961:10;20914:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20914:58:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20914:58:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20914:58:5;;;;;;;;;;;;;;;;20899:73;;20997:1;20986:7;:12;20982:143;;21022:88;21033:27;21062:38;21102:7;21022:10;:88::i;:::-;21112:1;21014:100;;;;;;;;;;20982:143;21232:16;:14;:16::i;:::-;21210:18;;:38;21206:143;;21272:62;21277:22;21301:32;21272:4;:62::i;:::-;21336:1;21264:74;;;;;;;;;;21206:143;21359:25;;:::i;:::-;21450:35;21466:6;21474:10;21450:15;:35::i;:::-;21439:4;:8;;:46;;;;;;;;;;;;;;;;;;;;;;;21511:14;21499:26;;;;;;;;:4;:8;;;:26;;;;;;;;;21495:126;;21549:57;21554:4;:8;;;21564:41;21549:4;:57::i;:::-;21608:1;21541:69;;;;;;;;;;;21495:126;21675:28;:26;:28::i;:::-;21632:4;:12;;21646:4;:25;;21631:72;;;;;;;;;;;;;;;;;;;;;;;;;;21733:18;21717:34;;;;;;;;:4;:12;;;:34;;;;;;;;;21713:169;;21775:92;21786:16;21804:42;21853:4;:12;;;21848:18;;;;;;;;21775:10;:92::i;:::-;21869:1;21767:104;;;;;;;;;;;21713:169;22500:32;22513:6;22521:10;22500:12;:32::i;:::-;22476:4;:21;;:56;;;;;22752:89;22775:4;:21;;;22798:42;;;;;;;;22813:4;:25;;;22798:42;;;22752:22;:89::i;:::-;22719:4;:12;;22733:4;:15;;22718:123;;;;;;;;;;;;;;;;;;;;;;;;;;22875:18;22859:34;;;;;;;;:4;:12;;;:34;;;;;;;;;22851:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23227:37;23235:11;;23248:4;:15;;;23227:7;:37::i;:::-;23190:4;:12;;23204:4;:19;;23189:75;;;;;;;;;;;;;;;;;;;;;;;;;;23298:18;23282:34;;;;;;;;:4;:12;;;:34;;;;;;;;;23274:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23412:47;23420:13;:21;23434:6;23420:21;;;;;;;;;;;;;;;;23443:4;:15;;;23412:7;:47::i;:::-;23373:4;:12;;23387:4;:21;;23372:87;;;;;;;;;;;;;;;;;;;;;;;;;;23493:18;23477:34;;;;;;;;:4;:12;;;:34;;;;;;;;;23469:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23649:4;:19;;;23635:11;:33;;;;23702:4;:21;;;23678:13;:21;23692:6;23678:21;;;;;;;;;;;;;;;:45;;;;23796:52;23801:6;23809:4;:21;;;23832:4;:15;;;23796:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23887:6;23863:48;;23880:4;23863:48;;;23895:4;:15;;;23863:48;;;;;;;;;;;;;;;;;;23961:11;;;;;;;;;;;:22;;;23992:4;23999:6;24007:4;:21;;;24030:4;:15;;;23961:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23961:85:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23961:85:5;;;;24070:14;24065:20;;;;;;;;24087:4;:21;;;24057:52;;;;;;20768:3348;;;;;;:::o;32442:2971::-;32526:4;32583:12;32598:11;;;;;;;;;;;:25;;;32632:4;32639:8;32649:12;32598:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32598:64:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32598:64:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;32598:64:5;;;;;;;;;;;;;;;;32583:79;;32687:1;32676:7;:12;32672:140;;32711:90;32722:27;32751:40;32793:7;32711:10;:90::i;:::-;32704:97;;;;;32672:140;32919:16;:14;:16::i;:::-;32897:18;;:38;32893:140;;32958:64;32963:22;32987:34;32958:4;:64::i;:::-;32951:71;;;;;32893:140;33139:12;33122:14;:12;:14::i;:::-;:29;33118:141;;;33174:74;33179:29;33210:37;33174:4;:74::i;:::-;33167:81;;;;;33118:141;33269:27;;:::i;:::-;33577:37;33605:8;33577:27;:37::i;:::-;33540:4;:12;;33554:4;:19;;33539:75;;;;;;;;;;;;;;;;;;;;;;;;;;33644:18;33628:34;;;;;;;;:4;:12;;;:34;;;;;;;;;33624:179;;33685:107;33696:16;33714:57;33778:4;:12;;;33773:18;;;;;;;;33685:10;:107::i;:::-;33678:114;;;;;;33624:179;33854:42;33862:4;:19;;;33883:12;33854:7;:42::i;:::-;33814:4;:12;;33828:4;:22;;33813:83;;;;;;;;;;;;;;;;;;;;;;;;;;33926:18;33910:34;;;;;;;;:4;:12;;;:34;;;;;;;;;33906:186;;33967:114;33978:16;33996:64;34067:4;:12;;;34062:18;;;;;;;;33967:10;:114::i;:::-;33960:121;;;;;;33906:186;34141:35;34149:12;;34163;34141:7;:35::i;:::-;34103:4;:12;;34117:4;:20;;34102:74;;;;;;;;;;;;;;;;;;;;;;;;;;34206:18;34190:34;;;;;;;;:4;:12;;;:34;;;;;;;;;34186:177;;34247:105;34258:16;34276:55;34338:4;:12;;;34333:18;;;;;;;;34247:10;:105::i;:::-;34240:112;;;;;;34186:177;34843:37;34857:8;34867:12;34843:13;:37::i;:::-;34997:4;:22;;;34960:14;:24;34975:8;34960:24;;;;;;;;;;;;;;;:34;;:59;;;;35070:11;;35029:14;:24;35044:8;35029:24;;;;;;;;;;;;;;;:38;;:52;;;;35106:4;:20;;;35091:12;:35;;;;35179:76;35186:8;35196:12;35210:4;:22;;;35234:4;:20;;;35179:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35305:11;;;;;;;;;;;:24;;;35338:4;35345:8;35355:12;35305:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35305:63:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;35305:63:5;;;;35391:14;35386:20;;;;;;;;35379:27;;;;32442:2971;;;;;:::o;43508:3514::-;43646:4;43652;43712:12;43727:11;;;;;;;;;;;:34;;;43770:4;43785:16;43804:10;43816:8;43826:11;43727:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;43727:111:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;43727:111:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;43727:111:5;;;;;;;;;;;;;;;;43712:126;;43863:1;43852:7;:12;43848:148;;43888:93;43899:27;43928:43;43973:7;43888:10;:93::i;:::-;43983:1;43880:105;;;;;;;;;;43848:148;44103:16;:14;:16::i;:::-;44081:18;;:38;44077:148;;44143:67;44148:22;44172:37;44143:4;:67::i;:::-;44212:1;44135:79;;;;;;;;;;44077:148;44368:16;:14;:16::i;:::-;44327;:35;;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44327:37:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44327:37:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;44327:37:5;;;;;;;;;;;;;;;;:57;44323:178;;44408:78;44413:22;44437:48;44408:4;:78::i;:::-;44488:1;44400:90;;;;;;;;;;44323:178;44571:10;44559:22;;:8;:22;;;44555:143;;;44605:78;44610:26;44638:44;44605:4;:78::i;:::-;44685:1;44597:90;;;;;;;;;;44555:143;44765:1;44750:11;:16;44746:145;;;44790:86;44795:36;44833:42;44790:4;:86::i;:::-;44878:1;44782:98;;;;;;;;;;44746:145;44964:2;44944:11;:23;44940:156;;;44991:90;44996:36;45034:46;44991:4;:90::i;:::-;45083:1;44983:102;;;;;;;;;;44940:156;45148:21;45171:22;45197:51;45214:10;45226:8;45236:11;45197:16;:51::i;:::-;45147:101;;;;45287:14;45282:20;;;;;;;;45262:16;:40;45258:161;;45326:78;45337:16;45331:23;;;;;;;;45356:47;45326:4;:78::i;:::-;45406:1;45318:90;;;;;;;;;;;;45258:161;45626:21;45649:16;45669:11;;;;;;;;;;;:41;;;45719:4;45734:16;45753:17;45669:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;45669:102:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;45669:102:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;45669:102:5;;;;;;;;;;;;;;;;;;;;;;;;;45625:146;;;;45814:14;45809:20;;;;;;;;45789:16;:40;45781:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46016:11;45976:16;:26;;;46003:8;45976:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;45976:36:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;45976:36:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;45976:36:5;;;;;;;;;;;;;;;;:51;;45968:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46182:15;46248:4;46211:42;;46219:16;46211:42;;;46207:250;;;46282:63;46304:4;46311:10;46323:8;46333:11;46282:13;:63::i;:::-;46269:76;;46207:250;;;46389:16;:22;;;46412:10;46424:8;46434:11;46389:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46389:57:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46389:57:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;46389:57:5;;;;;;;;;;;;;;;;46376:70;;46207:250;46579:14;46574:20;;;;;;;;46560:10;:34;46552:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46681:96;46697:10;46709:8;46719:17;46746:16;46765:11;46681:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46827:11;;;;;;;;;;;:33;;;46869:4;46884:16;46903:10;46915:8;46925:17;46944:11;46827:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46827:129:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46827:129:5;;;;46980:14;46975:20;;;;;;;;46997:17;46967:48;;;;;;;;;;43508:3514;;;;;;;;:::o;5717:417:4:-;5792:5;5809:20;5847:10;;;;;;;;;;;5809:49;;5912:6;5873:5;:15;;;5889:4;5903;5873:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5873:36:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5873:36:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5873:36:4;;;;;;;;;;;;;;;;:45;5869:117;;;5941:34;5934:41;;;;;5869:117;6024:6;6000:5;:15;;;6016:4;6000:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6000:21:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6000:21:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6000:21:4;;;;;;;;;;;;;;;;:30;5996:100;;;6053:32;6046:39;;;;;5996:100;6113:14;6106:21;;;5717:417;;;;;:::o;6928:1319::-;6995:4;7011:31;7071:10;;;;;;;;;;;7011:71;;7092:18;7128:10;;;;;;;;;;;7113:36;;;7158:4;7113:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7113:51:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7113:51:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7113:51:4;;;;;;;;;;;;;;;;7092:72;;7174:5;:18;;;7193:4;7207;7214:6;7174:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7174:47:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7174:47:4;;;;7232:12;7284:16;7322:1;7317:151;;;;7490:2;7485:217;;;;7836:1;7833;7826:12;7317:151;7416:1;7412:6;7401:17;;7317:151;;7485:217;7587:2;7584:1;7581;7566:24;7628:1;7622:8;7611:19;;7277:579;;7883:7;7875:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7994:17;8029:10;;;;;;;;;;;8014:36;;;8059:4;8014:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8014:51:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8014:51:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8014:51:4;;;;;;;;;;;;;;;;7994:71;;8099:13;8083:12;:29;;8075:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8175:13;8160:12;:28;8153:35;;;;;;6928:1319;;;;:::o;4440:330:12:-;4528:9;4539:4;4556:13;4571:19;;:::i;:::-;4594:31;4609:6;4617:7;4594:14;:31::i;:::-;4555:70;;;;4646:18;4639:25;;;;;;;;:3;:25;;;;;;;;;4635:71;;4688:3;4693:1;4680:15;;;;;;;;;;;4635:71;4724:18;4744;4753:8;4744;:18::i;:::-;4716:47;;;;;;4440:330;;;;;;:::o;3729:605::-;3809:9;3820:10;;:::i;:::-;4117:14;4133;4151:25;447:4;4169:6;4151:7;:25::i;:::-;4116:60;;;;4198:18;4190:26;;;;;;;;:4;:26;;;;;;;;;4186:90;;4240:4;4246:18;;;;;;;;4261:1;4246:18;;;4232:33;;;;;;;;;;;4186:90;4292:35;4299:9;4310:7;:16;;;4292:6;:35::i;:::-;4285:42;;;;;;3729:605;;;;;;:::o;166:9661:4:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cashPrior",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interestAccumulated",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "AccrueInterest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accountBorrows",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "Borrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "error",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "info",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "detail",
          "type": "uint256"
        }
      ],
      "name": "Failure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "LiquidateBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mintTokens",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ComptrollerInterface",
          "name": "oldComptroller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ComptrollerInterface",
          "name": "newComptroller",
          "type": "address"
        }
      ],
      "name": "NewComptroller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract InterestRateModel",
          "name": "oldInterestRateModel",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract InterestRateModel",
          "name": "newInterestRateModel",
          "type": "address"
        }
      ],
      "name": "NewMarketInterestRateModel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldReserveFactorMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newReserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "NewReserveFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accountBorrows",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "RepayBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "benefactor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "addAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTotalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reduceAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTotalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesReduced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_acceptAdmin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "addAmount",
          "type": "uint256"
        }
      ],
      "name": "_addReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "reduceAmount",
          "type": "uint256"
        }
      ],
      "name": "_reduceReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "newComptroller",
          "type": "address"
        }
      ],
      "name": "_setComptroller",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract InterestRateModel",
          "name": "newInterestRateModel",
          "type": "address"
        }
      ],
      "name": "_setInterestRateModel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "_setPendingAdmin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newReserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "_setReserveFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "accrualBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "accrueInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOfUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "borrowIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "borrowRatePerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "comptroller",
      "outputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "exchangeRateCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exchangeRateStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "underlying_",
          "type": "address"
        },
        {
          "internalType": "contract ComptrollerInterface",
          "name": "comptroller_",
          "type": "address"
        },
        {
          "internalType": "contract InterestRateModel",
          "name": "interestRateModel_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialExchangeRateMantissa_",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "comptroller_",
          "type": "address"
        },
        {
          "internalType": "contract InterestRateModel",
          "name": "interestRateModel_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialExchangeRateMantissa_",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "interestRateModel",
      "outputs": [
        {
          "internalType": "contract InterestRateModel",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isCToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "internalType": "contract CTokenInterface",
          "name": "cTokenCollateral",
          "type": "address"
        }
      ],
      "name": "liquidateBorrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        }
      ],
      "name": "redeemUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        }
      ],
      "name": "repayBorrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        }
      ],
      "name": "repayBorrowBehalf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveFactorMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "seize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "supplyRatePerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalBorrows",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "totalBorrowsCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "node_modules/compound-protocol/contracts/CErc20.sol",
    "exportedSymbols": {
      "CErc20": [
        1027
      ]
    },
    "id": 1028,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 700,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "node_modules/compound-protocol/contracts/CToken.sol",
        "file": "./CToken.sol",
        "id": 701,
        "nodeType": "ImportDirective",
        "scope": 1028,
        "sourceUnit": 4641,
        "src": "26:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 702,
              "name": "CToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4640,
              "src": "185:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CToken_$4640",
                "typeString": "contract CToken"
              }
            },
            "id": 703,
            "nodeType": "InheritanceSpecifier",
            "src": "185:6:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 704,
              "name": "CErc20Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5069,
              "src": "193:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CErc20Interface_$5069",
                "typeString": "contract CErc20Interface"
              }
            },
            "id": 705,
            "nodeType": "InheritanceSpecifier",
            "src": "193:15:4"
          }
        ],
        "contractDependencies": [
          4640,
          4700,
          5001,
          5004,
          5069,
          5286,
          5889,
          6496
        ],
        "contractKind": "contract",
        "documentation": "@title Compound's CErc20 Contract\n@notice CTokens which wrap an EIP-20 underlying\n@author Compound",
        "fullyImplemented": true,
        "id": 1027,
        "linearizedBaseContracts": [
          1027,
          5069,
          5004,
          4640,
          5889,
          6496,
          5286,
          5001,
          4700
        ],
        "name": "CErc20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 743,
              "nodeType": "Block",
              "src": "1075:310:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 725,
                        "name": "comptroller_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "1157:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComptrollerInterface_$5495",
                          "typeString": "contract ComptrollerInterface"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 726,
                        "name": "interestRateModel_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "1171:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InterestRateModel_$6528",
                          "typeString": "contract InterestRateModel"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 727,
                        "name": "initialExchangeRateMantissa_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 713,
                        "src": "1191:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 728,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "1221:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 729,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "1228:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 730,
                        "name": "decimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "1237:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ComptrollerInterface_$5495",
                          "typeString": "contract ComptrollerInterface"
                        },
                        {
                          "typeIdentifier": "t_contract$_InterestRateModel_$6528",
                          "typeString": "contract InterestRateModel"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 722,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6594,
                        "src": "1140:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_CErc20_$1027",
                          "typeString": "contract super CErc20"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1145,
                      "src": "1140:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ComptrollerInterface_$5495_$_t_contract$_InterestRateModel_$6528_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (contract ComptrollerInterface,contract InterestRateModel,uint256,string memory,string memory,uint8)"
                      }
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1140:107:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 732,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:107:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 733,
                      "name": "underlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5003,
                      "src": "1304:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 734,
                      "name": "underlying_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 707,
                      "src": "1317:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1304:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 736,
                  "nodeType": "ExpressionStatement",
                  "src": "1304:24:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 738,
                            "name": "underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5003,
                            "src": "1353:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 737,
                          "name": "EIP20Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5564,
                          "src": "1338:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EIP20Interface_$5564_$",
                            "typeString": "type(contract EIP20Interface)"
                          }
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1338:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP20Interface_$5564",
                          "typeString": "contract EIP20Interface"
                        }
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5502,
                      "src": "1338:38:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1338:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "1338:40:4"
                }
              ]
            },
            "documentation": "@notice Initialize the new money market\n@param underlying_ The address of the underlying asset\n@param comptroller_ The address of the Comptroller\n@param interestRateModel_ The address of the interest rate model\n@param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\n@param name_ ERC-20 name of this token\n@param symbol_ ERC-20 symbol of this token\n@param decimals_ ERC-20 decimal precision of this token",
            "id": 744,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 707,
                  "name": "underlying_",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "734:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 709,
                  "name": "comptroller_",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "779:33:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ComptrollerInterface_$5495",
                    "typeString": "contract ComptrollerInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 708,
                    "name": "ComptrollerInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5495,
                    "src": "779:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerInterface_$5495",
                      "typeString": "contract ComptrollerInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 711,
                  "name": "interestRateModel_",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "838:36:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InterestRateModel_$6528",
                    "typeString": "contract InterestRateModel"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 710,
                    "name": "InterestRateModel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6528,
                    "src": "838:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InterestRateModel_$6528",
                      "typeString": "contract InterestRateModel"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 713,
                  "name": "initialExchangeRateMantissa_",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "900:33:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 715,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "959:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 717,
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "1004:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 719,
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "1051:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1051:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "733:334:4"
            },
            "returnParameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1075:0:4"
            },
            "scope": 1027,
            "src": "714:671:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "1820:75:4",
              "statements": [
                {
                  "assignments": [
                    752,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 752,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 759,
                      "src": "1831:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 751,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1831:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 756,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 754,
                        "name": "mintAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "1857:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 753,
                      "name": "mintInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2227,
                      "src": "1844:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1830:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 757,
                    "name": "err",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 752,
                    "src": "1885:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 750,
                  "id": 758,
                  "nodeType": "Return",
                  "src": "1878:10:4"
                }
              ]
            },
            "documentation": "@notice Sender supplies assets into the market and receives cTokens in exchange\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param mintAmount The amount of the underlying asset to supply\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "1779:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1779:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1778:17:4"
            },
            "returnParameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "1814:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1814:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1813:6:4"
            },
            "scope": 1027,
            "src": "1765:130:4",
            "stateMutability": "nonpayable",
            "superFunction": 5013,
            "visibility": "external"
          },
          {
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "2297:52:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 768,
                        "name": "redeemTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 762,
                        "src": "2329:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 767,
                      "name": "redeemInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2521,
                      "src": "2314:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2314:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 766,
                  "id": 770,
                  "nodeType": "Return",
                  "src": "2307:35:4"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for the underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemTokens The number of cTokens to redeem into underlying\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 762,
                  "name": "redeemTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "2254:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2253:19:4"
            },
            "returnParameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 765,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "2291:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2291:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2290:6:4"
            },
            "scope": 1027,
            "src": "2238:111:4",
            "stateMutability": "nonpayable",
            "superFunction": 5020,
            "visibility": "external"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "2766:62:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 780,
                        "name": "redeemAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "2808:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 779,
                      "name": "redeemUnderlyingInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2559,
                      "src": "2783:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2783:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 778,
                  "id": 782,
                  "nodeType": "Return",
                  "src": "2776:45:4"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for a specified amount of underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemAmount The amount of underlying to redeem\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "name": "redeemAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "2723:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2723:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2722:19:4"
            },
            "returnParameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "2760:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2760:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2759:6:4"
            },
            "scope": 1027,
            "src": "2697:131:4",
            "stateMutability": "nonpayable",
            "superFunction": 5027,
            "visibility": "external"
          },
          {
            "body": {
              "id": 795,
              "nodeType": "Block",
              "src": "3148:52:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 792,
                        "name": "borrowAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 786,
                        "src": "3180:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 791,
                      "name": "borrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2918,
                      "src": "3165:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3165:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 790,
                  "id": 794,
                  "nodeType": "Return",
                  "src": "3158:35:4"
                }
              ]
            },
            "documentation": "@notice Sender borrows assets from the protocol to their own address\n@param borrowAmount The amount of the underlying asset to borrow\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 786,
                  "name": "borrowAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "3105:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3105:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3104:19:4"
            },
            "returnParameters": {
              "id": 790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 789,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "3142:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3141:6:4"
            },
            "scope": 1027,
            "src": "3089:111:4",
            "stateMutability": "nonpayable",
            "superFunction": 5034,
            "visibility": "external"
          },
          {
            "body": {
              "id": 811,
              "nodeType": "Block",
              "src": "3464:83:4",
              "statements": [
                {
                  "assignments": [
                    804,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 804,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 811,
                      "src": "3475:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 803,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3475:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 808,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 806,
                        "name": "repayAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "3508:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 805,
                      "name": "repayBorrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3172,
                      "src": "3488:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3488:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3474:46:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 809,
                    "name": "err",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 804,
                    "src": "3537:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 802,
                  "id": 810,
                  "nodeType": "Return",
                  "src": "3530:10:4"
                }
              ]
            },
            "documentation": "@notice Sender repays their own borrow\n@param repayAmount The amount to repay\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 798,
                  "name": "repayAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "3422:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3422:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3421:18:4"
            },
            "returnParameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 801,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "3458:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3457:6:4"
            },
            "scope": 1027,
            "src": "3401:146:4",
            "stateMutability": "nonpayable",
            "superFunction": 5041,
            "visibility": "external"
          },
          {
            "body": {
              "id": 830,
              "nodeType": "Block",
              "src": "3914:99:4",
              "statements": [
                {
                  "assignments": [
                    822,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 822,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 830,
                      "src": "3925:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 821,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3925:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 827,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 824,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 814,
                        "src": "3964:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 825,
                        "name": "repayAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "3974:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 823,
                      "name": "repayBorrowBehalfInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3216,
                      "src": "3938:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3938:48:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3924:62:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 828,
                    "name": "err",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 822,
                    "src": "4003:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 820,
                  "id": 829,
                  "nodeType": "Return",
                  "src": "3996:10:4"
                }
              ]
            },
            "documentation": "@notice Sender repays a borrow belonging to borrower\n@param borrower the account with the debt being payed off\n@param repayAmount The amount to repay\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrowBehalf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 814,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "3854:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3854:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 816,
                  "name": "repayAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "3872:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3872:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3853:36:4"
            },
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 819,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "3908:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3908:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3907:6:4"
            },
            "scope": 1027,
            "src": "3827:186:4",
            "stateMutability": "nonpayable",
            "superFunction": 5050,
            "visibility": "external"
          },
          {
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "4604:115:4",
              "statements": [
                {
                  "assignments": [
                    843,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 843,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 852,
                      "src": "4615:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 842,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4615:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 849,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 845,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "4652:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 846,
                        "name": "repayAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "4662:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 847,
                        "name": "cTokenCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 837,
                        "src": "4675:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CTokenInterface_$5001",
                          "typeString": "contract CTokenInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_CTokenInterface_$5001",
                          "typeString": "contract CTokenInterface"
                        }
                      ],
                      "id": 844,
                      "name": "liquidateBorrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3559,
                      "src": "4628:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_CTokenInterface_$5001_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,contract CTokenInterface) returns (uint256,uint256)"
                      }
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4628:64:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4614:78:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 850,
                    "name": "err",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 843,
                    "src": "4709:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 841,
                  "id": 851,
                  "nodeType": "Return",
                  "src": "4702:10:4"
                }
              ]
            },
            "documentation": "@notice The sender liquidates the borrowers collateral.\n The collateral seized is transferred to the liquidator.\n@param borrower The borrower of this cToken to be liquidated\n@param repayAmount The amount of the underlying borrowed asset to repay\n@param cTokenCollateral The market in which to seize collateral from the borrower\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "4510:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4510:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 835,
                  "name": "repayAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "4528:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4528:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 837,
                  "name": "cTokenCollateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "4546:32:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CTokenInterface_$5001",
                    "typeString": "contract CTokenInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 836,
                    "name": "CTokenInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5001,
                    "src": "4546:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CTokenInterface_$5001",
                      "typeString": "contract CTokenInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4509:70:4"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 840,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "4598:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4598:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4597:6:4"
            },
            "scope": 1027,
            "src": "4485:234:4",
            "stateMutability": "nonpayable",
            "superFunction": 5061,
            "visibility": "external"
          },
          {
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "5008:55:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 861,
                        "name": "addAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "5046:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 860,
                      "name": "_addReservesInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4275,
                      "src": "5025:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5025:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 859,
                  "id": 863,
                  "nodeType": "Return",
                  "src": "5018:38:4"
                }
              ]
            },
            "documentation": "@notice The sender adds to reserves.\n@param addAmount The amount fo underlying token to add as reserves\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addReserves",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "name": "addAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "4968:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4968:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4967:16:4"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "5002:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5002:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5001:6:4"
            },
            "scope": 1027,
            "src": "4946:117:4",
            "stateMutability": "nonpayable",
            "superFunction": 5068,
            "visibility": "external"
          },
          {
            "body": {
              "id": 883,
              "nodeType": "Block",
              "src": "5375:113:4",
              "statements": [
                {
                  "assignments": [
                    871
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 871,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 883,
                      "src": "5385:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EIP20Interface_$5564",
                        "typeString": "contract EIP20Interface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 870,
                        "name": "EIP20Interface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5564,
                        "src": "5385:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP20Interface_$5564",
                          "typeString": "contract EIP20Interface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 875,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 873,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5003,
                        "src": "5423:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 872,
                      "name": "EIP20Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5564,
                      "src": "5408:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_EIP20Interface_$5564_$",
                        "typeString": "type(contract EIP20Interface)"
                      }
                    },
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5408:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EIP20Interface_$5564",
                      "typeString": "contract EIP20Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5385:49:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 879,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6593,
                            "src": "5475:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$1027",
                              "typeString": "contract CErc20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CErc20_$1027",
                              "typeString": "contract CErc20"
                            }
                          ],
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5467:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5467:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 876,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 871,
                        "src": "5451:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP20Interface_$5564",
                          "typeString": "contract EIP20Interface"
                        }
                      },
                      "id": 877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5509,
                      "src": "5451:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5451:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 869,
                  "id": 882,
                  "nodeType": "Return",
                  "src": "5444:37:4"
                }
              ]
            },
            "documentation": "@notice Gets balance of this contract in terms of the underlying\n@dev This excludes the value of the current message, if any\n@return The quantity of underlying tokens owned by this contract",
            "id": 884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCashPrior",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5343:2:4"
            },
            "returnParameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 868,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "5369:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5369:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5368:6:4"
            },
            "scope": 1027,
            "src": "5322:166:4",
            "stateMutability": "view",
            "superFunction": 4597,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 927,
              "nodeType": "Block",
              "src": "5799:335:4",
              "statements": [
                {
                  "assignments": [
                    894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 894,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "5809:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EIP20Interface_$5564",
                        "typeString": "contract EIP20Interface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 893,
                        "name": "EIP20Interface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5564,
                        "src": "5809:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP20Interface_$5564",
                          "typeString": "contract EIP20Interface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 898,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 896,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5003,
                        "src": "5847:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 895,
                      "name": "EIP20Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5564,
                      "src": "5832:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_EIP20Interface_$5564_$",
                        "typeString": "type(contract EIP20Interface)"
                      }
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5832:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EIP20Interface_$5564",
                      "typeString": "contract EIP20Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5809:49:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 901,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 886,
                          "src": "5889:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 903,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6593,
                              "src": "5903:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CErc20_$1027",
                                "typeString": "contract CErc20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CErc20_$1027",
                                "typeString": "contract CErc20"
                              }
                            ],
                            "id": 902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5895:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5895:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 899,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "5873:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EIP20Interface_$5564",
                            "typeString": "contract EIP20Interface"
                          }
                        },
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5547,
                        "src": "5873:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5873:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 906,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "5912:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5873:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 912,
                  "nodeType": "IfStatement",
                  "src": "5869:117:4",
                  "trueBody": {
                    "id": 911,
                    "nodeType": "Block",
                    "src": "5920:66:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 908,
                            "name": "Error",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5748,
                            "src": "5941:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Error_$5748_$",
                              "typeString": "type(enum TokenErrorReporter.Error)"
                            }
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "TOKEN_INSUFFICIENT_ALLOWANCE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5941:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$5748",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        },
                        "functionReturnParameters": 892,
                        "id": 910,
                        "nodeType": "Return",
                        "src": "5934:41:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 915,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 886,
                          "src": "6016:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 913,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "6000:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EIP20Interface_$5564",
                            "typeString": "contract EIP20Interface"
                          }
                        },
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5509,
                        "src": "6000:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6000:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 917,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "6024:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6000:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 923,
                  "nodeType": "IfStatement",
                  "src": "5996:100:4",
                  "trueBody": {
                    "id": 922,
                    "nodeType": "Block",
                    "src": "6032:64:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 919,
                            "name": "Error",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5748,
                            "src": "6053:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Error_$5748_$",
                              "typeString": "type(enum TokenErrorReporter.Error)"
                            }
                          },
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "TOKEN_INSUFFICIENT_BALANCE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6053:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$5748",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        },
                        "functionReturnParameters": 892,
                        "id": 921,
                        "nodeType": "Return",
                        "src": "6046:39:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 924,
                      "name": "Error",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5748,
                      "src": "6113:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Error_$5748_$",
                        "typeString": "type(enum TokenErrorReporter.Error)"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "NO_ERROR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "6113:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$5748",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "functionReturnParameters": 892,
                  "id": 926,
                  "nodeType": "Return",
                  "src": "6106:21:4"
                }
              ]
            },
            "documentation": "@dev Checks whether or not there is sufficient allowance for this contract to move amount from `from` and\n     whether or not `from` has a balance of at least `amount`. Does NOT do a transfer.",
            "id": 928,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTransferIn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 886,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 928,
                  "src": "5742:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5742:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 888,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 928,
                  "src": "5756:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5756:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5741:27:4"
            },
            "returnParameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 928,
                  "src": "5792:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$5748",
                    "typeString": "enum TokenErrorReporter.Error"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 890,
                    "name": "Error",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5748,
                    "src": "5792:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$5748",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5791:7:4"
            },
            "scope": 1027,
            "src": "5717:417:4",
            "stateMutability": "view",
            "superFunction": 4606,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "7001:1246:4",
              "statements": [
                {
                  "assignments": [
                    938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 938,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 995,
                      "src": "7011:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EIP20NonStandardInterface_$5629",
                        "typeString": "contract EIP20NonStandardInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 937,
                        "name": "EIP20NonStandardInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5629,
                        "src": "7011:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP20NonStandardInterface_$5629",
                          "typeString": "contract EIP20NonStandardInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 942,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 940,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5003,
                        "src": "7071:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 939,
                      "name": "EIP20NonStandardInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5629,
                      "src": "7045:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_EIP20NonStandardInterface_$5629_$",
                        "typeString": "type(contract EIP20NonStandardInterface)"
                      }
                    },
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7045:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EIP20NonStandardInterface_$5629",
                      "typeString": "contract EIP20NonStandardInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7011:71:4"
                },
                {
                  "assignments": [
                    944
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 944,
                      "name": "balanceBefore",
                      "nodeType": "VariableDeclaration",
                      "scope": 995,
                      "src": "7092:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 943,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7092:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 953,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 950,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6593,
                            "src": "7158:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$1027",
                              "typeString": "contract CErc20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CErc20_$1027",
                              "typeString": "contract CErc20"
                            }
                          ],
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7150:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7150:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 946,
                            "name": "underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5003,
                            "src": "7128:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 945,
                          "name": "EIP20Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5564,
                          "src": "7113:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EIP20Interface_$5564_$",
                            "typeString": "type(contract EIP20Interface)"
                          }
                        },
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7113:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP20Interface_$5564",
                          "typeString": "contract EIP20Interface"
                        }
                      },
                      "id": 948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5509,
                      "src": "7113:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7113:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7092:72:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 957,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "7193:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 959,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6593,
                            "src": "7207:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$1027",
                              "typeString": "contract CErc20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CErc20_$1027",
                              "typeString": "contract CErc20"
                            }
                          ],
                          "id": 958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7199:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7199:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 961,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 932,
                        "src": "7214:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 954,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "7174:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP20NonStandardInterface_$5629",
                          "typeString": "contract EIP20NonStandardInterface"
                        }
                      },
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5594,
                      "src": "7174:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7174:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 963,
                  "nodeType": "ExpressionStatement",
                  "src": "7174:47:4"
                },
                {
                  "assignments": [
                    965
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 965,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 995,
                      "src": "7232:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 964,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7232:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 966,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7232:12:4"
                },
                {
                  "externalReferences": [
                    {
                      "success": {
                        "declaration": 965,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "7401:7:4",
                        "valueSize": 1
                      }
                    },
                    {
                      "success": {
                        "declaration": 965,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "7611:7:4",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 967,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    switch returndatasize()\n    case 0 { success := not(0) }\n    case 32 {\n        returndatacopy(0, 0, 32)\n        success := mload(0)\n    }\n    default { revert(0, 0) }\n}",
                  "src": "7254:612:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 969,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "7883:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e5f5452414e534645525f494e5f4641494c4544",
                        "id": 970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7892:26:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0da3873a20fdc47c8625307ac91c3576e4c3c6ba3dbaf813e465d9b0cabb0ee0",
                          "typeString": "literal_string \"TOKEN_TRANSFER_IN_FAILED\""
                        },
                        "value": "TOKEN_TRANSFER_IN_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0da3873a20fdc47c8625307ac91c3576e4c3c6ba3dbaf813e465d9b0cabb0ee0",
                          "typeString": "literal_string \"TOKEN_TRANSFER_IN_FAILED\""
                        }
                      ],
                      "id": 968,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6546,
                        6547
                      ],
                      "referencedDeclaration": 6547,
                      "src": "7875:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7875:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 972,
                  "nodeType": "ExpressionStatement",
                  "src": "7875:44:4"
                },
                {
                  "assignments": [
                    974
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 974,
                      "name": "balanceAfter",
                      "nodeType": "VariableDeclaration",
                      "scope": 995,
                      "src": "7994:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 973,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7994:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 983,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 980,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6593,
                            "src": "8059:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CErc20_$1027",
                              "typeString": "contract CErc20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CErc20_$1027",
                              "typeString": "contract CErc20"
                            }
                          ],
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8051:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8051:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 976,
                            "name": "underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5003,
                            "src": "8029:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 975,
                          "name": "EIP20Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5564,
                          "src": "8014:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EIP20Interface_$5564_$",
                            "typeString": "type(contract EIP20Interface)"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8014:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP20Interface_$5564",
                          "typeString": "contract EIP20Interface"
                        }
                      },
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5509,
                      "src": "8014:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8014:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7994:71:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 985,
                          "name": "balanceAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 974,
                          "src": "8083:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 986,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 944,
                          "src": "8099:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8083:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e5f5452414e534645525f494e5f4f564552464c4f57",
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8114:28:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_208ce11108ba7449de4aa5a86628f67f58f67306e5252e1ebd1353b20e4e67cd",
                          "typeString": "literal_string \"TOKEN_TRANSFER_IN_OVERFLOW\""
                        },
                        "value": "TOKEN_TRANSFER_IN_OVERFLOW"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_208ce11108ba7449de4aa5a86628f67f58f67306e5252e1ebd1353b20e4e67cd",
                          "typeString": "literal_string \"TOKEN_TRANSFER_IN_OVERFLOW\""
                        }
                      ],
                      "id": 984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6546,
                        6547
                      ],
                      "referencedDeclaration": 6547,
                      "src": "8075:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8075:68:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 990,
                  "nodeType": "ExpressionStatement",
                  "src": "8075:68:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 991,
                      "name": "balanceAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 974,
                      "src": "8160:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 992,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 944,
                      "src": "8175:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8160:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 936,
                  "id": 994,
                  "nodeType": "Return",
                  "src": "8153:35:4"
                }
              ]
            },
            "documentation": "@dev Similar to EIP20 transfer, except it handles a False result from `transferFrom` reverts in that case.\n     If caller has not called `checkTransferIn`, this may revert due to insufficient balance or insufficient\n     allowance. If caller has called `checkTransferIn` prior to this call, and it returned Error.NO_ERROR,\n     this should not revert in normal conditions. This function returns the actual amount received,\n     with may be less than `amount` if there is a fee attached with the transfer.\n     *      Note: This wrapper safely handles non-standard ERC-20 tokens that do not return a value.\n           See here: https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca",
            "id": 996,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferIn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 930,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "6950:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6950:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 932,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "6964:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6964:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6949:27:4"
            },
            "returnParameters": {
              "id": 936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 935,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "6995:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6995:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6994:6:4"
            },
            "scope": 1027,
            "src": "6928:1319:4",
            "stateMutability": "nonpayable",
            "superFunction": 4615,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1025,
              "nodeType": "Block",
              "src": "9005:820:4",
              "statements": [
                {
                  "assignments": [
                    1004
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1004,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 1025,
                      "src": "9015:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EIP20NonStandardInterface_$5629",
                        "typeString": "contract EIP20NonStandardInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1003,
                        "name": "EIP20NonStandardInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5629,
                        "src": "9015:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP20NonStandardInterface_$5629",
                          "typeString": "contract EIP20NonStandardInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1008,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1006,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5003,
                        "src": "9075:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1005,
                      "name": "EIP20NonStandardInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5629,
                      "src": "9049:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_EIP20NonStandardInterface_$5629_$",
                        "typeString": "type(contract EIP20NonStandardInterface)"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9049:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EIP20NonStandardInterface_$5629",
                      "typeString": "contract EIP20NonStandardInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9015:71:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1012,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "9111:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1013,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "9115:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1009,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1004,
                        "src": "9096:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP20NonStandardInterface_$5629",
                          "typeString": "contract EIP20NonStandardInterface"
                        }
                      },
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5585,
                      "src": "9096:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9096:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "9096:26:4"
                },
                {
                  "assignments": [
                    1017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1017,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1025,
                      "src": "9133:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1016,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9133:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1018,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9133:12:4"
                },
                {
                  "externalReferences": [
                    {
                      "success": {
                        "declaration": 1017,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "9301:7:4",
                        "valueSize": 1
                      }
                    },
                    {
                      "success": {
                        "declaration": 1017,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "9510:7:4",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 1019,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    switch returndatasize()\n    case 0 { success := not(0) }\n    case 32 {\n        returndatacopy(0, 0, 32)\n        success := mload(0)\n    }\n    default { revert(0, 0) }\n}",
                  "src": "9155:609:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1021,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "9781:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e5f5452414e534645525f4f55545f4641494c4544",
                        "id": 1022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9790:27:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_240ffd6c262c542faf953100ec47f7b3f7ed65e23c06d0ff5d14cbe032268909",
                          "typeString": "literal_string \"TOKEN_TRANSFER_OUT_FAILED\""
                        },
                        "value": "TOKEN_TRANSFER_OUT_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_240ffd6c262c542faf953100ec47f7b3f7ed65e23c06d0ff5d14cbe032268909",
                          "typeString": "literal_string \"TOKEN_TRANSFER_OUT_FAILED\""
                        }
                      ],
                      "id": 1020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6546,
                        6547
                      ],
                      "referencedDeclaration": 6547,
                      "src": "9773:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9773:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "9773:45:4"
                }
              ]
            },
            "documentation": "@dev Similar to EIP20 transfer, except it handles a False success from `transfer` and returns an explanatory\n     error code rather than reverting. If caller has not called checked protocol's balance, this may revert due to\n     insufficient cash held in this contract. If caller has checked protocol's balance prior to this call, and verified\n     it is >= amount, this should not revert in normal conditions.\n     *      Note: This wrapper safely handles non-standard ERC-20 tokens that do not return a value.\n           See here: https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca",
            "id": 1026,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferOut",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "8963:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8963:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "8983:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8983:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8962:33:4"
            },
            "returnParameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9005:0:4"
            },
            "scope": 1027,
            "src": "8940:885:4",
            "stateMutability": "nonpayable",
            "superFunction": 4622,
            "visibility": "internal"
          }
        ],
        "scope": 1028,
        "src": "166:9661:4"
      }
    ],
    "src": "0:9828:4"
  },
  "bytecode": "",
  "deployedBytecode": "",
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang",
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "evmVersion": "petersburg"
  }
}
